{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MEDIASITE\\\\desktop\\\\world\\\\src\\\\components\\\\Countries.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react/cjs/react.development';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const url = \"https://restcountries.com/v3.1/all?fields=flags,name,population,capital,region\";\n  const [getApi, setGetApi] = useState(true);\n  const [rangeValue, setRangeValue] = useState(1);\n  const [dataTransformed, setDataTransformed] = useState([]);\n  const continents = [\"Africa\", \"America\", \"Asia\", \"Europe\", \"Oceania\"];\n  const [radioChecked, setRadioChecked] = useState(\" \");\n  useEffect(() => {\n    if (getApi) {\n      axios.get(url).then(res => setData(res.data));\n      setGetApi(false);\n    }\n\n    ;\n\n    const arrtransforme = () => {\n      const objcData = Object.keys(data).map(i => data[i]);\n      const arr = objcData.sort((a, b) => {\n        return b.population - a.population;\n      });\n      arr.length = rangeValue;\n      setDataTransformed(arr);\n    };\n\n    arrtransforme(); //     const datObject = Object.keys(data).map((i)=>data[i]);\n    //     const arr = datObject\n    // }\n    // dataConverti()\n  }, [data, getApi, rangeValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorcontener\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"250\",\n        onChange: e => setRangeValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"continent\",\n        children: continents.map(continent => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: continent,\n              id: continent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: continent,\n              children: continent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 32\n            }, this)]\n          }, continent, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dataTransformed.map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: country.name.common\n      }, country.name.common, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Countries, \"vXCBiNuCHzSzw5W9yIuoiX4RVM4=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["C:/Users/MEDIASITE/desktop/world/src/components/Countries.js"],"names":["React","axios","useState","useEffect","Countries","data","setData","url","getApi","setGetApi","rangeValue","setRangeValue","dataTransformed","setDataTransformed","continents","radioChecked","setRadioChecked","get","then","res","arrtransforme","objcData","Object","keys","map","i","arr","sort","a","b","population","length","e","target","value","continent","country","name","common"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useState,useEffect } from 'react/cjs/react.development';\r\n\r\nconst Countries = () => {\r\n    const[data,setData] = useState([]);\r\n    const url = \"https://restcountries.com/v3.1/all?fields=flags,name,population,capital,region\";\r\n    const [getApi,setGetApi] = useState(true);\r\n    const[rangeValue,setRangeValue] = useState(1);\r\n    const[dataTransformed,setDataTransformed] = useState([])\r\n    const continents = [\"Africa\",\"America\",\"Asia\",\"Europe\",\"Oceania\"]\r\n    const [radioChecked,setRadioChecked] = useState(\" \");\r\n\r\n    useEffect(() => {\r\n        if(getApi){\r\n            axios\r\n        .get(url)\r\n        .then(res =>setData(res.data))\r\n        setGetApi(false)\r\n        };\r\n        const arrtransforme=()=>{\r\n            const objcData = Object.keys(data).map((i)=>data[i]);\r\n            const arr = objcData.sort((a,b)=>{\r\n                return b.population - a.population;\r\n            })\r\n            arr.length = rangeValue\r\n            setDataTransformed(arr)\r\n        }\r\n        arrtransforme()\r\n       \r\n        //     const datObject = Object.keys(data).map((i)=>data[i]);\r\n        //     const arr = datObject\r\n        // }\r\n        // dataConverti()\r\n    }, [data,getApi,rangeValue]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"sorcontener\">\r\n                <input type=\"range\" min=\"1\" max=\"250\" onChange={(e)=>setRangeValue(e.target.value)} />\r\n                <ul className=\"continent\">\r\n                   {continents.map((continent)=>{\r\n                       return(\r\n                           <li key={continent}>\r\n                               <input type=\"radio\" name={continent} id={continent} />\r\n                               <label htmlFor={continent}>{continent}</label>\r\n                           </li>\r\n                       )\r\n                   })}\r\n                </ul>\r\n                \r\n            </div>\r\n            <ul>\r\n                {dataTransformed.map((country)=>(\r\n                    <li key={country.name.common}>{country.name.common}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Countries;\r\n"]},"metadata":{},"sourceType":"module"}