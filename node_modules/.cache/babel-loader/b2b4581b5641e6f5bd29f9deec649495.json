{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mbaye\\\\Desktop\\\\reactworld\\\\src\\\\components\\\\Countries.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react/cjs/react.development';\nimport Card from './Card';\nimport \"../styles/countries.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const url = \"https://restcountries.com/v3.1/all?fields=flags,name,population,capital,region\";\n  const [getApi, setGetApi] = useState(true);\n  const [rangeValue, setRangeValue] = useState(30);\n  const [dataTransformed, setDataTransformed] = useState([]);\n  const continents = [\"Africa\", \"America\", \"Asia\", \"Europe\", \"Oceania\"];\n  const [radioChecked, setRadioChecked] = useState(\"\");\n  useEffect(() => {\n    if (getApi) {\n      axios.get(url).then(res => setData(res.data));\n      setGetApi(false);\n    }\n\n    ;\n\n    const arrtransforme = () => {\n      const objcData = Object.keys(data).map(i => data[i]);\n      const arr = objcData.sort((a, b) => {\n        return b.population - a.population;\n      });\n      arr.length = rangeValue;\n      setDataTransformed(arr);\n    };\n\n    arrtransforme(); //     const datObject = Object.keys(data).map((i)=>data[i]);\n    //     const arr = datObject\n    // }\n    // dataConverti()\n  }, [data, getApi, rangeValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countries\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorcontener\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        value: rangeValue,\n        min: \"1\",\n        max: \"250\",\n        onChange: e => setRangeValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: continents.map(continent => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: continent,\n              value: continent,\n              checked: continent === radioChecked,\n              onChange: e => setRadioChecked(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: continent,\n              children: continent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this)]\n          }, continent, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"annuler\",\n      children: radioChecked && /*#__PURE__*/_jsxDEV(\"h5\", {\n        onClick: () => setRadioChecked(\"\"),\n        children: \"Retour \\xE0 l'Accueil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"listcountries\",\n      children: dataTransformed.filter(country => country.region.includes(radioChecked)).map(country => /*#__PURE__*/_jsxDEV(Card, {\n        country: country\n      }, country.name.official, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Countries, \"+qv62f3SAKSWrkc/2MNdprq2ET0=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["C:/Users/Mbaye/Desktop/reactworld/src/components/Countries.js"],"names":["React","axios","useState","useEffect","Card","Countries","data","setData","url","getApi","setGetApi","rangeValue","setRangeValue","dataTransformed","setDataTransformed","continents","radioChecked","setRadioChecked","get","then","res","arrtransforme","objcData","Object","keys","map","i","arr","sort","a","b","population","length","e","target","value","continent","filter","country","region","includes","name","official"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useState,useEffect } from 'react/cjs/react.development';\r\nimport Card from './Card';\r\nimport \"../styles/countries.css\"\r\n\r\nconst Countries = () => {\r\n    const[data,setData] = useState([]);\r\n    const url = \"https://restcountries.com/v3.1/all?fields=flags,name,population,capital,region\";\r\n    const [getApi,setGetApi] = useState(true);\r\n    const[rangeValue,setRangeValue] = useState(30);\r\n    const[dataTransformed,setDataTransformed] = useState([])\r\n    const continents = [\"Africa\",\"America\",\"Asia\",\"Europe\",\"Oceania\"]\r\n    const [radioChecked,setRadioChecked] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if(getApi){\r\n            axios\r\n        .get(url)\r\n        .then(res =>setData(res.data))\r\n        setGetApi(false)\r\n        };\r\n        const arrtransforme=()=>{\r\n            const objcData = Object.keys(data).map((i)=>data[i]);\r\n            const arr = objcData.sort((a,b)=>{\r\n                return b.population - a.population;\r\n            })\r\n            arr.length = rangeValue\r\n            setDataTransformed(arr)\r\n        }\r\n        arrtransforme()\r\n       \r\n        //     const datObject = Object.keys(data).map((i)=>data[i]);\r\n        //     const arr = datObject\r\n        // }\r\n        // dataConverti()\r\n    }, [data,getApi,rangeValue]);\r\n\r\n    return (\r\n        <div className=\"countries\">\r\n            <div className=\"sorcontener\">\r\n                <input type=\"range\" value={rangeValue} min=\"1\" max=\"250\" onChange={(e)=>setRangeValue(e.target.value)} />\r\n                <ul>\r\n                   {continents.map(continent=>{\r\n                       return(\r\n                        <li key={continent}>\r\n                        <input \r\n                        type=\"radio\"\r\n                         \r\n                        id={continent} \r\n                        value={continent}\r\n                        checked={continent === radioChecked}\r\n                        onChange={(e)=>setRadioChecked(e.target.value)}/>\r\n                        <label htmlFor={continent}>{continent}</label>\r\n                        </li>\r\n                       )\r\n                        })}\r\n                </ul>\r\n               \r\n            </div>\r\n             <div className=\"annuler\">\r\n             {radioChecked &&(\r\n              <h5 onClick={() => setRadioChecked(\"\")}>Retour à l'Accueil</h5>\r\n            )}\r\n                </div>\r\n            <ul className=\"listcountries\">\r\n                {dataTransformed\r\n                .filter(country=>country.region.includes(radioChecked))\r\n                .map((country)=>(\r\n                    <Card key={country.name.official} country={country}/>\r\n                ))}\r\n                \r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Countries;\r\n"]},"metadata":{},"sourceType":"module"}